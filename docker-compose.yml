networks:
  network_dpaas:

services:
  # Base de données utilisée pour l'authentification par token
  # Seulement utilisée par les composants DPAAS
  db:
    container_name: dpass_db
    image: mariadb
    restart: unless-stopped
    networks:
      - network_dpaas
    environment:
      MYSQL_DATABASE: auth
      MYSQL_USER: dpaas
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql

  # MinIO, stockage compatible S3 pour tout les fichiers nécessaires au stack DPAAS
  minio:
    container_name: dpass_minio
    image: minio/minio
    restart: unless-stopped
    networks:
      - network_dpaas
    environment:
      MINIO_ACCESS_KEY: ${S3_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_SECRET_KEY}
    volumes:
      - ./s3:/data
    command: server /data/${S3_BUCKET}
    entrypoint: sh

  # Génération TTS par IA
  xtts:
    container_name: dpass_xtts
    build: ./xtts
    image: dpass_xtts-api-server:latest
    restart: unless-stopped
    networks:
      - network_dpaas
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_NAME: auth
      DB_USER: dpaas
      DB_PASS: ${MYSQL_PASSWORD}
      S3_HOST: minio
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: "dpaas"
    volumes:
      - ./logs/xtts:/var/log/xtts/
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - "5000:5000"

  # Génération de vidéos par IA
  face-animator:
    container_name: dpass_face-animator
    build: ./face-animator
    image: dpass_face-animator:latest
    restart: unless-stopped
    networks:
      - network_dpaas
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_NAME: auth
      DB_USER: dpaas
      DB_PASS: ${MYSQL_PASSWORD}
      S3_HOST: minio
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: "dpaas"
    volumes:
      - ./logs/face-animator:/var/log/face-animator/
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Gestionnaire de conversation
  conversation-manager:
    container_name: dpass_conversation-manager
    build: ./conversation-manager
    image: dpass_conversation-manager:latest
    restart: unless-stopped
    networks:
      - network_dpaas
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_NAME: auth
      DB_USER: dpaas
      DB_PASS: ${MYSQL_PASSWORD}
      S3_HOST: minio
      S3_BUCKET: "dpaas"
    volumes:
      - ./logs/conversation-manager:/var/log/conversation-manager/